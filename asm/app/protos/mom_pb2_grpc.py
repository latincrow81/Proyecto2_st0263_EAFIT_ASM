# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import app.protos.mom_pb2 as mom__pb2


class MessageQueueStub(object):
    """servicio de mensajes en queue

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PushMessage = channel.unary_unary(
                '/MessageQueue/PushMessage',
                request_serializer=mom__pb2.QueueRequest.SerializeToString,
                response_deserializer=mom__pb2.QueueResponse.FromString,
                )
        self.PullMessage = channel.unary_unary(
                '/MessageQueue/PullMessage',
                request_serializer=mom__pb2.QueueRequest.SerializeToString,
                response_deserializer=mom__pb2.MessageResponse.FromString,
                )
        self.PushTopic = channel.unary_unary(
                '/MessageQueue/PushTopic',
                request_serializer=mom__pb2.TopicRequest.SerializeToString,
                response_deserializer=mom__pb2.TopicResponse.FromString,
                )
        self.PullTopic = channel.unary_unary(
                '/MessageQueue/PullTopic',
                request_serializer=mom__pb2.TopicRequest.SerializeToString,
                response_deserializer=mom__pb2.TopicResponse.FromString,
                )


class MessageQueueServicer(object):
    """servicio de mensajes en queue

    """

    def PushMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PullMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PushTopic(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PullTopic(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MessageQueueServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PushMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.PushMessage,
                    request_deserializer=mom__pb2.QueueRequest.FromString,
                    response_serializer=mom__pb2.QueueResponse.SerializeToString,
            ),
            'PullMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.PullMessage,
                    request_deserializer=mom__pb2.QueueRequest.FromString,
                    response_serializer=mom__pb2.MessageResponse.SerializeToString,
            ),
            'PushTopic': grpc.unary_unary_rpc_method_handler(
                    servicer.PushTopic,
                    request_deserializer=mom__pb2.TopicRequest.FromString,
                    response_serializer=mom__pb2.TopicResponse.SerializeToString,
            ),
            'PullTopic': grpc.unary_unary_rpc_method_handler(
                    servicer.PullTopic,
                    request_deserializer=mom__pb2.TopicRequest.FromString,
                    response_serializer=mom__pb2.TopicResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'MessageQueue', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MessageQueue(object):
    """servicio de mensajes en queue

    """

    @staticmethod
    def PushMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MessageQueue/PushMessage',
            mom__pb2.QueueRequest.SerializeToString,
            mom__pb2.QueueResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PullMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MessageQueue/PullMessage',
            mom__pb2.QueueRequest.SerializeToString,
            mom__pb2.MessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PushTopic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MessageQueue/PushTopic',
            mom__pb2.TopicRequest.SerializeToString,
            mom__pb2.TopicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PullTopic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MessageQueue/PullTopic',
            mom__pb2.TopicRequest.SerializeToString,
            mom__pb2.TopicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
